// Notice there is no unadorned wait which would terminate the process.
// So once the four process statements have executed SCL will simply wrap back to the beginning of the process and continue execution.


 // test_OSC32K_8MHz.scl
 // Hand-Generated by j_doin
 //
 // This testbench has a process _TMR1OSC that generates
 // an accurate realistic 32768Hz clock into pin CLKIN of
 // a PIC16F688 to be used as external clock or TIMER1OSC.
 // Any TIMER1 oscillator PIC can be simulated with this.
 //
 // The timings are independent from device MPSIM frequency,
 // but there are versions hand-tumed for each clock frequency,
 // due to the minimum TCycle resolution.

 configuration for "pic12f635" is
 end configuration;

 testbench for "pic12f635" is begin

    _TMR1OSC: process is
    // This emulates the TMR1OSC by feeding input to the pin
    // GP0/CLKIN.
    // OSC1 freq = 32767.83616Hz, for a clock of 8MHz.
    // The generator has a pattern of 99 cycles.
    // No clock startup time is simulated.
       variable iter : integer;

    begin
        GP0 <= '0';        // value at power-on
        loop
            iter := 1;
            while iter <= 56 loop
                wait for 15.0 us;
                GP0 <= not GP0;
                wait for 16.0 us;
                GP0 <= not GP0;
                iter := iter + 1;
            end loop;
            // iter := 1;
            // while iter <= 107 loop
            //     wait for 15.0 us;
            //     GP0 <= not GP0;
            //     iter := iter + 1;
            // end loop;
        end loop;
        wait;
    end process;

end testbench;
